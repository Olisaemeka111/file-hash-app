name: Docker Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Lint Python Code
      - name: Lint Python Code
        run: |
          pip install flake8 bandit
          flake8 backend/app.py
          bandit -r backend/app.py

      # Run Unit Tests
      - name: Run Unit Tests
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -r backend/requirements.txt
          pytest backend/tests --maxfail=5 --disable-warnings

  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: lint-and-test  # Ensure this job runs only after linting and testing
    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Log in to Docker Hub (or another container registry)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/my-app:latest .

      # Push the Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-app:latest

  deploy:
    name: Deploy Docker Image
    runs-on: ubuntu-latest
    needs: build-and-push-docker  # Ensure this job runs only after the image is built and pushed
    steps:
      # Deploy the Docker image (example: SSH into a server and run the container)
      - name: Deploy to Server
        run: |
          ssh user@server-ip "docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/my-app:latest && docker run -d -p 5000:5000 ${{ secrets.DOCKER_HUB_USERNAME }}/my-app:latest"