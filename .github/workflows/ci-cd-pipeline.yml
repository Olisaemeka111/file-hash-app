name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint-and-static-analysis:
    name: Linting and Static Code Analysis
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Verify app.py exists
      - name: Verify app.py Exists
        run: |
          if [ ! -f "backend/app.py" ]; then
            echo "Error: backend/app.py not found in the repository."
            exit 1
          fi

      # Python Backend Linting
      - name: Lint Python Code
        run: |
          pip install flake8 bandit
          flake8 backend/app.py  # Lint the Flask app file

      # JavaScript Frontend Linting
      - name: Lint JavaScript Code
        working-directory: frontend
        run: |
          npm install eslint --save-dev
          npx eslint script.js

  unit-tests:
    name: Run Backend Unit Tests
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Install Dependencies & Run Tests
      - name: Install Python Dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -r backend/requirements.txt
          pytest backend/tests --maxfail=5 --disable-warnings

  vulnerability-scanning:
    name: Vulnerability Testing
    runs-on: ubuntu-latest

    steps:
      # Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Scan Python Packages for Vulnerabilities
      - name: Scan Python Dependencies
        run: |
          pip install safety bandit
          safety check -r backend/requirements.txt
          bandit -r backend/app.py

      # Scan Frontend for Vulnerabilities
      - name: Audit NPM Dependencies
        working-directory: frontend
        run: |
          npm install
          npm audit --audit-level=high

  dast-dynamic-security-scan:
    name: Perform Dynamic Security Testing
    runs-on: ubuntu-latest

    steps:
      # Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Run Security Scans with OWASP ZAP
      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker pull owasp/zap2docker-stable
          docker run -v $(pwd):/zap/wrk:rw -t owasp/zap2docker-stable zap-baseline.py -t http://127.0.0.1:5000 -r report.html
      - name: Upload Security Report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: report.html